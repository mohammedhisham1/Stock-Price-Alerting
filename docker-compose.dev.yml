services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: stock_alerting_db_dev
    environment:
      POSTGRES_DB: stock_alerting_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - stock_alerting_network_dev

  # Redis for Celery
  redis:
    image: redis:7-alpine
    container_name: stock_alerting_redis_dev
    ports:
      - "6379:6379"
    networks:
      - stock_alerting_network_dev
    volumes:
      - redis_data_dev:/data

  # Django Backend (Development)
  backend:
    build: .
    container_name: stock_alerting_backend_dev
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      - DEBUG=True
      - SECRET_KEY=dev-secret-key-not-for-production
      - DATABASE_URL=postgres://postgres:postgres@db:5432/stock_alerting_dev
      - REDIS_URL=redis://redis:6379/0
      - DB_HOST=db
      - DB_PORT=5432
      - LOAD_SEED_DATA=true
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend,0.0.0.0
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
    volumes:
      - .:/app
      - static_volume_dev:/app/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    networks:
      - stock_alerting_network_dev

volumes:
  postgres_data_dev:
  redis_data_dev:
  static_volume_dev:

networks:
  stock_alerting_network_dev:
    driver: bridge
