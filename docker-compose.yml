services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: stock_alerting_db
    environment:
      POSTGRES_DB: stock_alerting
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - stock_alerting_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Celery
  redis:
    image: redis:7-alpine
    container_name: stock_alerting_redis
    ports:
      - "6379:6379"
    networks:
      - stock_alerting_network
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Backend
  backend:
    build: .
    container_name: stock_alerting_backend
    environment:
      - DEBUG=False
      - SECRET_KEY=your-secret-key-change-in-production
      - DATABASE_URL=postgres://postgres:postgres@db:5432/stock_alerting
      - REDIS_URL=redis://redis:6379/0
      - DB_HOST=db
      - DB_PORT=5432
      - LOAD_SEED_DATA=true
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend,0.0.0.0
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://localhost
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - stock_alerting_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker
  celery:
    build: .
    container_name: stock_alerting_celery
    command: celery -A stock_alerting worker -l info
    environment:
      - DEBUG=False
      - SECRET_KEY=your-secret-key-change-in-production
      - DATABASE_URL=postgres://postgres:postgres@db:5432/stock_alerting
      - REDIS_URL=redis://redis:6379/0
      - DB_HOST=db
      - DB_PORT=5432
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
      - backend
    networks:
      - stock_alerting_network

  # Celery Beat (Scheduler)
  celery-beat:
    build: .
    container_name: stock_alerting_celery_beat
    command: celery -A stock_alerting beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    environment:
      - DEBUG=False
      - SECRET_KEY=your-secret-key-change-in-production
      - DATABASE_URL=postgres://postgres:postgres@db:5432/stock_alerting
      - REDIS_URL=redis://redis:6379/0
      - DB_HOST=db
      - DB_PORT=5432
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
      - backend
    networks:
      - stock_alerting_network

  # React Frontend
  frontend:
    build: ./frontend
    container_name: stock_alerting_frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - stock_alerting_network
    environment:
      - REACT_APP_API_URL=/api

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:

networks:
  stock_alerting_network:
    driver: bridge
